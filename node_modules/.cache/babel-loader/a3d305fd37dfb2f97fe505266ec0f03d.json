{"ast":null,"code":"var _jsxFileName = \"/Users/SWKHAN/Downloads/streamlinify/src/index.js\";\nimport React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router, Switch, Route, withRouter } from \"react-router-dom\";\nimport { Provider, connect } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport Register from \"./components/Auth/Register/Register.component\";\nimport Login from \"./components/Auth/Login/Login.component\";\nimport firebase from \"./server/firebase\";\nimport { combinedReducers } from \"./store/reducer\";\nimport { setUser } from \"./store/actioncreator\";\nimport { AppLoader } from \"./components/AppLoader/AppLoader.component\";\nimport \"semantic-ui-css/semantic.min.css\";\nconst store = createStore(combinedReducers);\n\nconst Index = props => {\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        props.setUser(user);\n        props.history.push(\"/\");\n      } else {\n        props.setUser(null);\n        props.history.push(\"/login\");\n      }\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  console.log(\"Debug\", props.currentUser);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AppLoader, {\n    loading: props.loading && props.location.pathname === \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/login\",\n    component: Login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/register\",\n    component: Register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    component: App,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  })));\n};\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.user.currentUser,\n    loading: state.channel.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setUser: user => {\n      dispatch(setUser(user));\n    }\n  };\n};\n\nconst IndexWithRouter = withRouter(connect(mapStateToProps, mapDispatchToProps)(Index));\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Router, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(IndexWithRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }\n})))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/SWKHAN/Downloads/streamlinify/src/index.js"],"names":["React","useEffect","ReactDOM","App","serviceWorker","BrowserRouter","Router","Switch","Route","withRouter","Provider","connect","createStore","Register","Login","firebase","combinedReducers","setUser","AppLoader","store","Index","props","auth","onAuthStateChanged","user","history","push","console","log","currentUser","loading","location","pathname","mapStateToProps","state","channel","mapDispatchToProps","dispatch","IndexWithRouter","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,UAAjD,QAAmE,kBAAnE;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,aAAlC;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,QAAP,MAAqB,+CAArB;AACA,OAAOC,KAAP,MAAkB,yCAAlB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,gBAAT,QAAiC,iBAAjC;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,SAAT,QAA0B,4CAA1B;AAEA,OAAO,kCAAP;AAEA,MAAMC,KAAK,GAAGP,WAAW,CAACI,gBAAD,CAAzB;;AAEA,MAAMI,KAAK,GAAIC,KAAD,IAAW;AAEvBpB,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,QAAQ,CAACO,IAAT,GAAgBC,kBAAhB,CAAoCC,IAAD,IAAU;AAC3C,UAAIA,IAAJ,EAAU;AACRH,QAAAA,KAAK,CAACJ,OAAN,CAAcO,IAAd;AACAH,QAAAA,KAAK,CAACI,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACD,OAHD,MAGO;AACLL,QAAAA,KAAK,CAACJ,OAAN,CAAc,IAAd;AACAI,QAAAA,KAAK,CAACI,OAAN,CAAcC,IAAd,CAAmB,QAAnB;AACD;AACF,KARD,EADc,CAUd;AACD,GAXQ,EAWN,EAXM,CAAT;AAaAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBP,KAAK,CAACQ,WAA3B;AAEA,sBAAQ,uDACN,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAER,KAAK,CAACS,OAAN,IAAiBT,KAAK,CAACU,QAAN,CAAeC,QAAf,KAA4B,GAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADM,eAEN,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAElB,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAwB,IAAA,SAAS,EAAED,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,SAAS,EAAEV,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAFM,CAAR;AAOD,CAxBD;;AA0BA,MAAM8B,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLL,IAAAA,WAAW,EAAEK,KAAK,CAACV,IAAN,CAAWK,WADnB;AAELC,IAAAA,OAAO,EAAEI,KAAK,CAACC,OAAN,CAAcL;AAFlB,GAAP;AAID,CALD;;AAOA,MAAMM,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLpB,IAAAA,OAAO,EAAGO,IAAD,IAAU;AAAEa,MAAAA,QAAQ,CAACpB,OAAO,CAACO,IAAD,CAAR,CAAR;AAAyB;AADzC,GAAP;AAGD,CAJD;;AAMA,MAAMc,eAAe,GAAG7B,UAAU,CAACE,OAAO,CAACsB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6ChB,KAA7C,CAAD,CAAlC;AAEAlB,QAAQ,CAACqC,MAAT,eACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEpB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,CADF,EAQEqB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CARF,E,CAWA;AACA;AACA;;AACArC,aAAa,CAACsC,UAAd","sourcesContent":["import React, { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router, Switch, Route, withRouter } from \"react-router-dom\";\nimport { Provider, connect } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport Register from \"./components/Auth/Register/Register.component\";\nimport Login from \"./components/Auth/Login/Login.component\";\nimport firebase from \"./server/firebase\";\nimport { combinedReducers } from \"./store/reducer\";\nimport { setUser } from \"./store/actioncreator\";\nimport { AppLoader } from \"./components/AppLoader/AppLoader.component\";\n\nimport \"semantic-ui-css/semantic.min.css\"\n\nconst store = createStore(combinedReducers)\n\nconst Index = (props) => {\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        props.setUser(user);\n        props.history.push(\"/\");\n      } else {\n        props.setUser(null);\n        props.history.push(\"/login\");\n      }\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  console.log(\"Debug\", props.currentUser);\n\n  return (<>\n    <AppLoader loading={props.loading && props.location.pathname === \"/\"} />\n    <Switch>\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/register\" component={Register} />\n      <Route path=\"/\" component={App} />\n    </Switch></>)\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUser: state.user.currentUser,\n    loading: state.channel.loading\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setUser: (user) => { dispatch(setUser(user)) }\n  }\n}\n\nconst IndexWithRouter = withRouter(connect(mapStateToProps, mapDispatchToProps)(Index));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <IndexWithRouter />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}