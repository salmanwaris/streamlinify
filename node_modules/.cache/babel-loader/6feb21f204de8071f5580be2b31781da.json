{"ast":null,"code":"var _jsxFileName = \"/Users/SWKHAN/Downloads/streamlinify/src/components/SideBar/UserInfo/UserInfo.component.jsx\";\nimport React from 'react';\nimport { Grid, Header, Icon, Image, Dropdown } from 'semantic-ui-react';\nimport { connect } from \"react-redux\";\nimport firebase from '../../../server/firebase';\nimport \"./UserInfo.css\";\n\nconst UserInfo = props => {\n  const getDropDownOptions = () => {\n    return [{\n      key: 'signout',\n      text: /*#__PURE__*/React.createElement(\"span\", {\n        onClick: signOut,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 19\n        }\n      }, \"Sign Out\")\n    }];\n  };\n\n  const signOut = () => {\n    firebase.auth().signOut().then(() => console.log(\"user signed out\"));\n  };\n\n  if (props.user) {\n    return /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      className: \"userinfo_grid_row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      inverted: true,\n      as: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"slack\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Header.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }\n    }, \"Streamlinify\")), /*#__PURE__*/React.createElement(Header, {\n      className: \"userinfo_displayname\",\n      inverted: true,\n      as: \"h4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      trigger: /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        src: props.user.photoURL,\n        avatar: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 37\n        }\n      }), props.user.displayName),\n      options: getDropDownOptions(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }\n    })))));\n  }\n\n  return null;\n};\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user.currentUser\n  };\n};\n\nexport default connect(mapStateToProps)(UserInfo);","map":{"version":3,"sources":["/Users/SWKHAN/Downloads/streamlinify/src/components/SideBar/UserInfo/UserInfo.component.jsx"],"names":["React","Grid","Header","Icon","Image","Dropdown","connect","firebase","UserInfo","props","getDropDownOptions","key","text","signOut","auth","then","console","log","user","photoURL","displayName","mapStateToProps","state","currentUser"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,EAA6BC,KAA7B,EAAoCC,QAApC,QAAoD,mBAApD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AAEA,OAAO,gBAAP;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAGxB,QAAMC,kBAAkB,GAAG,MAAM;AAC7B,WAAO,CAAC;AACJC,MAAAA,GAAG,EAAE,SADD;AAEJC,MAAAA,IAAI,eAAE;AAAM,QAAA,OAAO,EAAEC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF,KAAD,CAAP;AAIH,GALD;;AAOA,QAAMA,OAAO,GAAG,MAAM;AAClBN,IAAAA,QAAQ,CAACO,IAAT,GACKD,OADL,GAEKE,IAFL,CAEU,MAAMC,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAFhB;AAGH,GAJD;;AAMA,MAAIR,KAAK,CAACS,IAAV,EAAgB;AACZ,wBAAQ,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACJ,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,GAAN;AAAU,MAAA,SAAS,EAAC,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,EAAE,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,MAAD,CAAQ,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,CADJ,eAKI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,sBAAlB;AAAyC,MAAA,QAAQ,MAAjD;AAAkD,MAAA,EAAE,EAAC,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AACI,MAAA,OAAO,eACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAET,KAAK,CAACS,IAAN,CAAWC,QAAvB;AAAiC,QAAA,MAAM,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEKV,KAAK,CAACS,IAAN,CAAWE,WAFhB,CAFR;AAOI,MAAA,OAAO,EAAEV,kBAAkB,EAP/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CALJ,CADJ,CADI,CAAR;AAuBH;;AACD,SAAO,IAAP;AACH,CA1CD;;AA4CA,MAAMW,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHJ,IAAAA,IAAI,EAAEI,KAAK,CAACJ,IAAN,CAAWK;AADd,GAAP;AAGH,CAJD;;AAMA,eAAejB,OAAO,CAACe,eAAD,CAAP,CAAyBb,QAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { Grid, Header, Icon, Image, Dropdown } from 'semantic-ui-react';\nimport { connect } from \"react-redux\";\nimport firebase from '../../../server/firebase';\n\nimport \"./UserInfo.css\";\n\nconst UserInfo = (props) => {\n\n\n    const getDropDownOptions = () => {\n        return [{\n            key: 'signout',\n            text: <span onClick={signOut} >Sign Out</span>\n        }]\n    }\n\n    const signOut = () => {\n        firebase.auth()\n            .signOut()\n            .then(() => console.log(\"user signed out\"));\n    }\n\n    if (props.user) {\n        return (<Grid>\n            <Grid.Column>\n                <Grid.Row className=\"userinfo_grid_row\">\n                    <Header inverted as=\"h2\">\n                        <Icon name=\"slack\" />\n                        <Header.Content>Streamlinify</Header.Content>\n                    </Header>\n                    <Header className=\"userinfo_displayname\" inverted as=\"h4\">\n                        <Dropdown\n                            trigger={\n                                <span>\n                                    <Image src={props.user.photoURL} avatar></Image>\n                                    {props.user.displayName}\n                                </span>\n                            }\n                            options={getDropDownOptions()}\n                        >\n                        </Dropdown>\n\n                    </Header>\n                </Grid.Row>\n            </Grid.Column>\n        </Grid>)\n    }\n    return null;\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user.currentUser\n    }\n}\n\nexport default connect(mapStateToProps)(UserInfo);"]},"metadata":{},"sourceType":"module"}