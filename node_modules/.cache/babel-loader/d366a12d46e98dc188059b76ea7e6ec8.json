{"ast":null,"code":"var _jsxFileName = \"/Users/SWKHAN/Downloads/streamlinify/src/components/Auth/Login/Login.component.jsx\";\nimport React, { useState } from 'react';\nimport { Grid, Form, Segment, Header, Icon, Button, Message } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport firebase from '../../../server/firebase';\nimport \"../Auth.css\";\n\nconst Login = () => {\n  let user = {\n    email: '',\n    password: ''\n  };\n  let errors = [];\n  const [userState, setuserState] = useState(user);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorState, seterrorState] = useState(errors);\n\n  const handleInput = event => {\n    let target = event.target;\n    setuserState(currentState => {\n      let currentuser = { ...currentState\n      };\n      currentuser[target.name] = target.value;\n      return currentuser;\n    });\n  };\n\n  const checkForm = () => {\n    if (isFormEmpty()) {\n      seterrorState(error => error.concat({\n        message: \"Please fill in all fields\"\n      }));\n      return false;\n    }\n\n    return true;\n  };\n\n  const isFormEmpty = () => {\n    return !userState.password.length || !userState.email.length;\n  };\n\n  const formaterrors = () => {\n    return errorState.map((error, index) => /*#__PURE__*/React.createElement(\"p\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 49\n      }\n    }, error.message));\n  };\n\n  const onSubmit = event => {\n    seterrorState(() => []);\n\n    if (checkForm()) {\n      setIsLoading(true);\n      firebase.auth().signInWithEmailAndPassword(userState.email, userState.password).then(user => {\n        setIsLoading(false);\n        console.log(user);\n      }).catch(serverError => {\n        setIsLoading(false);\n        seterrorState(error => error.concat(serverError));\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    verticalAlign: \"middle\",\n    textAlign: \"center\",\n    className: \"grid-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    style: {\n      maxWidth: '500px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    icon: true,\n    as: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"slack\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }), \"Login\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Segment, {\n    stacked: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form.Input, {\n    name: \"email\",\n    value: userState.email,\n    icon: \"mail\",\n    iconPosition: \"left\",\n    onChange: handleInput,\n    type: \"email\",\n    placeholder: \"User Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Form.Input, {\n    name: \"password\",\n    value: userState.password,\n    icon: \"lock\",\n    iconPosition: \"left\",\n    onChange: handleInput,\n    type: \"password\",\n    placeholder: \"User Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    disabled: isLoading,\n    loading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, \"Login\")), errorState.length > 0 && /*#__PURE__*/React.createElement(Message, {\n    error: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, \"Errors\"), formaterrors()), /*#__PURE__*/React.createElement(Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"Not an User? \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/register\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 30\n    }\n  }, \"Register \"))));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/SWKHAN/Downloads/streamlinify/src/components/Auth/Login/Login.component.jsx"],"names":["React","useState","Grid","Form","Segment","Header","Icon","Button","Message","Link","firebase","Login","user","email","password","errors","userState","setuserState","isLoading","setIsLoading","errorState","seterrorState","handleInput","event","target","currentState","currentuser","name","value","checkForm","isFormEmpty","error","concat","message","length","formaterrors","map","index","onSubmit","auth","signInWithEmailAndPassword","then","console","log","catch","serverError","maxWidth"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Grid, Form, Segment, Header, Icon, Button, Message } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\n\nimport firebase from '../../../server/firebase';\n\nimport \"../Auth.css\"\n\nconst Login = () => {\n\n    let user = {\n        email: '',\n        password: ''\n    }\n\n    let errors = [];\n\n    const [userState, setuserState] = useState(user);\n    const [isLoading, setIsLoading] = useState(false);\n    const [errorState, seterrorState] = useState(errors);\n\n    const handleInput = (event) => {\n        let target = event.target;\n        setuserState((currentState) => {\n            let currentuser = { ...currentState };\n            currentuser[target.name] = target.value;\n            return currentuser;\n        })\n    }\n\n    const checkForm = () => {\n        if (isFormEmpty()) {\n            seterrorState((error) => error.concat({ message: \"Please fill in all fields\" }));\n            return false;\n        }\n        return true;\n    }\n\n    const isFormEmpty = () => {\n        return !userState.password.length ||\n            !userState.email.length;\n    }\n\n    const formaterrors = () => {\n        return errorState.map((error, index) => <p key={index}>{error.message}</p>)\n    }\n\n    const onSubmit = (event) => {\n        seterrorState(() => []);\n        if (checkForm()) {\n            setIsLoading(true);\n            firebase.auth()\n                .signInWithEmailAndPassword(userState.email, userState.password)\n                .then(user => {\n                    setIsLoading(false);\n                    console.log(user);\n                })\n                .catch(serverError => {\n                    setIsLoading(false);\n                    seterrorState((error) => error.concat(serverError));\n                })\n\n        }\n    }\n\n    return <Grid verticalAlign=\"middle\" textAlign=\"center\" className=\"grid-form\" >\n        <Grid.Column style={{ maxWidth: '500px' }}>\n            <Header icon as=\"h2\">\n                <Icon name=\"slack\" />\n            Login\n        </Header>\n            <Form onSubmit={onSubmit}>\n                <Segment stacked>\n                    <Form.Input\n                        name=\"email\"\n                        value={userState.email}\n                        icon=\"mail\"\n                        iconPosition=\"left\"\n                        onChange={handleInput}\n                        type=\"email\"\n                        placeholder=\"User Email\"\n                    />\n                    <Form.Input\n                        name=\"password\"\n                        value={userState.password}\n                        icon=\"lock\"\n                        iconPosition=\"left\"\n                        onChange={handleInput}\n                        type=\"password\"\n                        placeholder=\"User Password\"\n                    />\n                </Segment>\n                <Button disabled={isLoading} loading={isLoading}>Login</Button>\n            </Form>\n            {errorState.length > 0 && <Message error>\n                <h3>Errors</h3>\n                {formaterrors()}\n            </Message>\n            }\n            <Message>\n                Not an User? <Link to=\"/register\" >Register </Link>\n            </Message>\n        </Grid.Column>\n    </Grid>\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}