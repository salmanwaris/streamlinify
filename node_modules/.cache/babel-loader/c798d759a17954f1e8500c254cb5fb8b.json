{"ast":null,"code":"var _jsxFileName = \"/Users/SWKHAN/Downloads/streamlinify/src/components/Messages/MessageHeader/MessageHeader.component.jsx\";\nimport React from 'react';\nimport { Segment, Header, Input, Icon } from 'semantic-ui-react';\n\nconst MessageHeader = props => {\n  return /*#__PURE__*/React.createElement(Segment, {\n    clearing: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    floated: \"left\",\n    fluid: \"true\",\n    as: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }\n  }, (props.isPrivateChat ? \"@ \" : \"# \") + props.channelName, !props.isPrivateChat && /*#__PURE__*/React.createElement(Icon, {\n    onClick: props.starChange,\n    name: props.starred ? \"star\" : \"star outline\",\n    color: props.starred ? \"yellow\" : \"black\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 42\n    }\n  })), /*#__PURE__*/React.createElement(Header.Subheader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, \" \", props.uniqueUsers, \" User\", props.uniqueUsers === 1 ? \"\" : \"s\")), /*#__PURE__*/React.createElement(Header, {\n    floated: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"search\",\n    icon: \"search\",\n    placeholder: \"Search Messages\",\n    size: \"mini\",\n    onChange: props.searchTermChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default MessageHeader;","map":{"version":3,"sources":["/Users/SWKHAN/Downloads/streamlinify/src/components/Messages/MessageHeader/MessageHeader.component.jsx"],"names":["React","Segment","Header","Input","Icon","MessageHeader","props","isPrivateChat","channelName","starChange","starred","uniqueUsers","searchTermChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,KAA1B,EAAiCC,IAAjC,QAA6C,mBAA7C;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7B,sBAAO,oBAAC,OAAD;AAAS,IAAA,QAAQ,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,MAAhB;AAAuB,IAAA,KAAK,EAAC,MAA7B;AAAoC,IAAA,EAAE,EAAC,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAACA,KAAK,CAACC,aAAN,GAAsB,IAAtB,GAA6B,IAA9B,IAAsCD,KAAK,CAACE,WADjD,EAEK,CAACF,KAAK,CAACC,aAAP,iBAAwB,oBAAC,IAAD;AACrB,IAAA,OAAO,EAAED,KAAK,CAACG,UADM;AAErB,IAAA,IAAI,EAAEH,KAAK,CAACI,OAAN,GAAgB,MAAhB,GAAyB,cAFV;AAGrB,IAAA,KAAK,EAAEJ,KAAK,CAACI,OAAN,GAAgB,QAAhB,GAA2B,OAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF7B,CADJ,eAQI,oBAAC,MAAD,CAAQ,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAoBJ,KAAK,CAACK,WAA1B,WAA4CL,KAAK,CAACK,WAAN,KAAsB,CAAtB,GAA0B,EAA1B,GAA+B,GAA3E,CARJ,CADG,eAWH,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,IAAI,EAAC,QAFT;AAGI,IAAA,WAAW,EAAC,iBAHhB;AAII,IAAA,IAAI,EAAC,MAJT;AAKI,IAAA,QAAQ,EAAEL,KAAK,CAACM,gBALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAXG,CAAP;AAsBH,CAvBD;;AAyBA,eAAeP,aAAf","sourcesContent":["import React from 'react';\nimport { Segment, Header, Input, Icon } from 'semantic-ui-react';\n\nconst MessageHeader = (props) => {\n    return <Segment clearing>\n        <Header floated=\"left\" fluid=\"true\" as=\"h2\">\n            <span>\n                {(props.isPrivateChat ? \"@ \" : \"# \") + props.channelName}\n                {!props.isPrivateChat && <Icon\n                    onClick={props.starChange}\n                    name={props.starred ? \"star\" : \"star outline\"}\n                    color={props.starred ? \"yellow\" : \"black\"} />}\n            </span>\n            <Header.Subheader> {props.uniqueUsers} User{props.uniqueUsers === 1 ? \"\" : \"s\"}</Header.Subheader>\n        </Header>\n        <Header floated=\"right\">\n            <Input\n                name=\"search\"\n                icon=\"search\"\n                placeholder=\"Search Messages\"\n                size=\"mini\"\n                onChange={props.searchTermChange}\n            />\n        </Header>\n\n    </Segment>\n}\n\nexport default MessageHeader;"]},"metadata":{},"sourceType":"module"}