{"ast":null,"code":"import { SET_USER, SET_CHANNEL, SET_FAVOURITECHANNEL, REMOVE_FAVOURITECHANNEL } from './actiontypes';\nimport { combineReducers } from \"redux\";\nlet defaultUserState = {\n  currentUser: null\n};\n\nconst userReducer = (state = defaultUserState, action) => {\n  if (action.type === SET_USER) {\n    let payload = action.payload;\n    state = { ...payload\n    };\n    return state;\n  }\n\n  return state;\n};\n\nlet defaultChannelState = {\n  currentChannel: null,\n  loading: true\n};\n\nconst channelReducer = (state = defaultChannelState, action) => {\n  if (action.type === SET_CHANNEL) {\n    let payload = action.payload;\n    state = { ...payload\n    };\n    state.loading = false;\n    return state;\n  }\n\n  return state;\n};\n\nlet defaultFavouriteChannelState = {\n  favouriteChannel: {}\n};\n\nconst favouriteChannelReducer = (state = defaultFavouriteChannelState, action) => {\n  if (action.type === SET_FAVOURITECHANNEL) {\n    let payload = action.payload.favouriteChannel;\n    let updatedState = { ...state.favouriteChannel\n    };\n    updatedState[payload.channelId] = payload.channelName;\n    return {\n      favouriteChannel: updatedState\n    };\n  } else if (action.type === REMOVE_FAVOURITECHANNEL) {\n    let payload = action.payload.favouriteChannel;\n    let updatedState = { ...state.favouriteChannel\n    };\n    delete updatedState[payload.channelId];\n    return {\n      favouriteChannel: updatedState\n    };\n  }\n\n  return state;\n};\n\nexport const combinedReducers = combineReducers({\n  user: userReducer,\n  channel: channelReducer,\n  favouriteChannel: favouriteChannelReducer\n});","map":{"version":3,"sources":["/Users/SWKHAN/Downloads/streamlinify/src/store/reducer.js"],"names":["SET_USER","SET_CHANNEL","SET_FAVOURITECHANNEL","REMOVE_FAVOURITECHANNEL","combineReducers","defaultUserState","currentUser","userReducer","state","action","type","payload","defaultChannelState","currentChannel","loading","channelReducer","defaultFavouriteChannelState","favouriteChannel","favouriteChannelReducer","updatedState","channelId","channelName","combinedReducers","user","channel"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,oBAAhC,EAAsDC,uBAAtD,QAAqF,eAArF;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,IAAIC,gBAAgB,GAAG;AACnBC,EAAAA,WAAW,EAAE;AADM,CAAvB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,gBAAT,EAA2BI,MAA3B,KAAsC;AACtD,MAAIA,MAAM,CAACC,IAAP,KAAgBV,QAApB,EAA8B;AAC1B,QAAIW,OAAO,GAAGF,MAAM,CAACE,OAArB;AACAH,IAAAA,KAAK,GAAG,EAAE,GAAGG;AAAL,KAAR;AACA,WAAOH,KAAP;AACH;;AACD,SAAOA,KAAP;AACH,CAPD;;AASA,IAAII,mBAAmB,GAAG;AACtBC,EAAAA,cAAc,EAAE,IADM;AAEtBC,EAAAA,OAAO,EAAG;AAFY,CAA1B;;AAMA,MAAMC,cAAc,GAAG,CAACP,KAAK,GAAGI,mBAAT,EAA8BH,MAA9B,KAAyC;AAC5D,MAAIA,MAAM,CAACC,IAAP,KAAgBT,WAApB,EAAiC;AAC7B,QAAIU,OAAO,GAAGF,MAAM,CAACE,OAArB;AACAH,IAAAA,KAAK,GAAG,EAAE,GAAGG;AAAL,KAAR;AACAH,IAAAA,KAAK,CAACM,OAAN,GAAe,KAAf;AACA,WAAON,KAAP;AACH;;AACD,SAAOA,KAAP;AACH,CARD;;AAUA,IAAIQ,4BAA4B,GAAG;AAC/BC,EAAAA,gBAAgB,EAAE;AADa,CAAnC;;AAKA,MAAMC,uBAAuB,GAAG,CAACV,KAAK,GAAGQ,4BAAT,EAAuCP,MAAvC,KAAkD;AAC9E,MAAIA,MAAM,CAACC,IAAP,KAAgBR,oBAApB,EAA0C;AACtC,QAAIS,OAAO,GAAGF,MAAM,CAACE,OAAP,CAAeM,gBAA7B;AACA,QAAIE,YAAY,GAAG,EAAE,GAAGX,KAAK,CAACS;AAAX,KAAnB;AACAE,IAAAA,YAAY,CAACR,OAAO,CAACS,SAAT,CAAZ,GAAkCT,OAAO,CAACU,WAA1C;AACA,WAAO;AAAEJ,MAAAA,gBAAgB,EAAEE;AAApB,KAAP;AACH,GALD,MAKO,IAAIV,MAAM,CAACC,IAAP,KAAgBP,uBAApB,EAA6C;AAChD,QAAIQ,OAAO,GAAGF,MAAM,CAACE,OAAP,CAAeM,gBAA7B;AACA,QAAIE,YAAY,GAAG,EAAE,GAAGX,KAAK,CAACS;AAAX,KAAnB;AACA,WAAOE,YAAY,CAACR,OAAO,CAACS,SAAT,CAAnB;AACA,WAAO;AAAEH,MAAAA,gBAAgB,EAAEE;AAApB,KAAP;AACH;;AACD,SAAOX,KAAP;AACH,CAbD;;AAeA,OAAO,MAAMc,gBAAgB,GAAGlB,eAAe,CAAC;AAAEmB,EAAAA,IAAI,EAAEhB,WAAR;AAAqBiB,EAAAA,OAAO,EAAET,cAA9B;AAA8CE,EAAAA,gBAAgB,EAAGC;AAAjE,CAAD,CAAxC","sourcesContent":["import { SET_USER, SET_CHANNEL, SET_FAVOURITECHANNEL, REMOVE_FAVOURITECHANNEL } from './actiontypes';\nimport { combineReducers } from \"redux\";\n\nlet defaultUserState = {\n    currentUser: null\n}\n\nconst userReducer = (state = defaultUserState, action) => {\n    if (action.type === SET_USER) {\n        let payload = action.payload;\n        state = { ...payload };\n        return state;\n    }\n    return state;\n}\n\nlet defaultChannelState = {\n    currentChannel: null,\n    loading : true\n}\n\n\nconst channelReducer = (state = defaultChannelState, action) => {\n    if (action.type === SET_CHANNEL) {\n        let payload = action.payload;\n        state = { ...payload };\n        state.loading= false;\n        return state;\n    }\n    return state;\n}\n\nlet defaultFavouriteChannelState = {\n    favouriteChannel: {}\n}\n\n\nconst favouriteChannelReducer = (state = defaultFavouriteChannelState, action) => {\n    if (action.type === SET_FAVOURITECHANNEL) {\n        let payload = action.payload.favouriteChannel;\n        let updatedState = { ...state.favouriteChannel };\n        updatedState[payload.channelId] = payload.channelName;\n        return { favouriteChannel: updatedState };\n    } else if (action.type === REMOVE_FAVOURITECHANNEL) {\n        let payload = action.payload.favouriteChannel;\n        let updatedState = { ...state.favouriteChannel };\n        delete updatedState[payload.channelId];\n        return { favouriteChannel: updatedState };\n    }\n    return state;\n}\n\nexport const combinedReducers = combineReducers({ user: userReducer, channel: channelReducer ,favouriteChannel : favouriteChannelReducer  })"]},"metadata":{},"sourceType":"module"}